//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KVLite {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Queries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Queries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KVLite.Queries", typeof(Queries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete from CacheItem
        /// where @ignoreExpirationDate = 1
        ///    or (utcExpiry is not null and utcExpiry &lt;= @utcNow);.
        /// </summary>
        internal static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select interval is not null as sliding
        ///  from CacheItem
        /// where partition = @partition
        ///   and key = @key
        ///   and (utcExpiry is null or utcExpiry &gt; @utcNow).
        /// </summary>
        internal static string Contains_ItemExists {
            get {
                return ResourceManager.GetString("Contains_ItemExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select count(*)
        ///  from CacheItem
        /// where @ignoreExpirationDate = 1
        ///    or (utcExpiry is null or utcExpiry &gt; @utcNow);.
        /// </summary>
        internal static string Count {
            get {
                return ResourceManager.GetString("Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PRAGMA auto_vacuum = FULL;
        ///CREATE TABLE CacheItem (
        ///    partition TEXT NOT NULL,
        ///    key TEXT NOT NULL,
        ///    serializedValue BLOB NOT NULL,
        ///    utcCreation BIGINT NOT NULL,
        ///    utcExpiry BIGINT,
        ///    interval BIGINT,
        ///    CONSTRAINT CacheItem_PK PRIMARY KEY (partition, key)
        ///);
        ///CREATE INDEX UtcExpiry_Idx ON CacheItem (utcExpiry ASC);.
        /// </summary>
        internal static string Ctor_CacheSchema {
            get {
                return ResourceManager.GetString("Ctor_CacheSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select count(*)
        ///  from sqlite_master
        /// where name = &apos;CacheItem&apos;;.
        /// </summary>
        internal static string Ctor_SchemaIsReady {
            get {
                return ResourceManager.GetString("Ctor_SchemaIsReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PRAGMA journal_size_limit = 10240000; -- 10MB.
        /// </summary>
        internal static string Ctor_SetPragmas {
            get {
                return ResourceManager.GetString("Ctor_SetPragmas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to insert or replace into CacheItem (partition, key, serializedValue, utcCreation, utcExpiry, interval)
        ///values (@partition, @key, @serializedValue, @utcCreation, @utcExpiry, @interval);.
        /// </summary>
        internal static string DoAdd_InsertItem {
            get {
                return ResourceManager.GetString("DoAdd_InsertItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select *
        ///  from CacheItem
        /// where partition = @partition
        ///   and key = @key
        ///   and (utcExpiry is null or utcExpiry &gt; @utcNow).
        /// </summary>
        internal static string GetItem_SelectItem {
            get {
                return ResourceManager.GetString("GetItem_SelectItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to update CacheItem
        ///   set utcExpiry = utcExpiry + interval
        /// where partition = @partition
        ///   and key = @key
        ///   and interval is not null;.
        /// </summary>
        internal static string GetItem_UpdateExpiry {
            get {
                return ResourceManager.GetString("GetItem_UpdateExpiry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from CacheItem
        /// where (utcExpiry is null or utcExpiry &gt; @utcNow);.
        /// </summary>
        internal static string GetItems_Select {
            get {
                return ResourceManager.GetString("GetItems_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from CacheItem
        /// where partition = @partition
        ///   and (utcExpiry is null or utcExpiry &gt; @utcNow);.
        /// </summary>
        internal static string GetItems_SelectPartition {
            get {
                return ResourceManager.GetString("GetItems_SelectPartition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete from CacheItem
        /// where partition = @partition
        ///   and key = @key;.
        /// </summary>
        internal static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to vacuum; -- Clears free list and makes DB file smaller.
        /// </summary>
        internal static string Vacuum {
            get {
                return ResourceManager.GetString("Vacuum", resourceCulture);
            }
        }
    }
}
