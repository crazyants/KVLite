//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KVLite {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Queries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Queries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KVLite.Queries", typeof(Queries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE Cache_Item (
        ///    partition TEXT NOT NULL,
        ///    key TEXT NOT NULL,
        ///    serializedValue BLOB NOT NULL,
        ///    utcCreation BIGINT NOT NULL,
        ///    utcExpiry BIGINT,
        ///    interval BIGINT,
        ///    CONSTRAINT Cache_Item_PK PRIMARY KEY (partition, key)
        ///);.
        /// </summary>
        internal static string CacheSchema {
            get {
                return ResourceManager.GetString("CacheSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select count(*)
        ///  from Cache_Item
        /// where @ignoreExpirationDate = 1
        ///    or (utcExpiry is null or utcExpiry &gt; @utcNow).
        /// </summary>
        internal static string Count {
            get {
                return ResourceManager.GetString("Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to insert into Cache_Item (partition, key, serializedValue, utcCreation, utcExpiry, interval)
        ///values (@partition, @key, @serializedValue, @utcCreation, @utcExpiry, @interval).
        /// </summary>
        internal static string DoAdd_Insert {
            get {
                return ResourceManager.GetString("DoAdd_Insert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from Cache_Item where partition = @partition and key = @key.
        /// </summary>
        internal static string DoAdd_Select {
            get {
                return ResourceManager.GetString("DoAdd_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to update Cache_Item
        ///   set serializedValue = @serializedValue
        ///     , utcCreation = @utcCreation
        ///     , utcExpiry = @utcExpiry
        ///     , interval = @interval
        /// where partition = @partition
        ///   and key = @key.
        /// </summary>
        internal static string DoAdd_Update {
            get {
                return ResourceManager.GetString("DoAdd_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete from Cache_Item
        /// where @ignoreExpirationDate = 1
        ///    or (utcExpiry is not null and utcExpiry &lt;= @utcNow);
        ///vacuum; -- Makes DB file smaller.
        /// </summary>
        internal static string DoClear {
            get {
                return ResourceManager.GetString("DoClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select *
        ///  from Cache_Item
        /// where partition = @partition
        ///   and key = @key
        ///   and (utcExpiry is null or utcExpiry &gt; @utcNow).
        /// </summary>
        internal static string DoGet_Select {
            get {
                return ResourceManager.GetString("DoGet_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to update Cache_Item
        ///   set utcExpiry = @utcExpiry -- Interval is added by PersistentCache
        /// where partition = @partition
        ///   and key = @key.
        /// </summary>
        internal static string DoGet_UpdateExpiry {
            get {
                return ResourceManager.GetString("DoGet_UpdateExpiry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from [cache_item]
        /// where ([utcExpiry] is null or [utcExpiry] &gt; @utcNow).
        /// </summary>
        internal static string GetItems_Select {
            get {
                return ResourceManager.GetString("GetItems_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from [cache_item]
        /// where [partition] = @partition
        ///   and ([utcExpiry] is null or [utcExpiry] &gt; @utcNow).
        /// </summary>
        internal static string GetItems_SelectPartition {
            get {
                return ResourceManager.GetString("GetItems_SelectPartition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE INDEX UtcExpiry_Idx ON Cache_Item (utcExpiry ASC);.
        /// </summary>
        internal static string IndexSchema {
            get {
                return ResourceManager.GetString("IndexSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete from [cache_item]
        /// where [partition] = @partition
        ///   and [key] = @key.
        /// </summary>
        internal static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select count(*)
        ///  from sqlite_master
        /// where name = &apos;Cache_Item&apos;.
        /// </summary>
        internal static string SchemaIsReady {
            get {
                return ResourceManager.GetString("SchemaIsReady", resourceCulture);
            }
        }
    }
}
